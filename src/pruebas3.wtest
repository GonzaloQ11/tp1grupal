import Base.*
import hechizos.*
import lucha.*
import habilidadesAvanzadas.*

describe "Tests de Habilidades Avanzadas" {

	const rolando = new Personaje(espectroMalefico)
	const armaduraSinRefuerzo = new Armadura(2, sinRefuerzo)

	fixture {
		rolando.agregarArtefacto(espada)
		collarDivino.cantidadDePerlas(5)
		rolando.agregarArtefacto(collarDivino)
		mascaraOscura.indiceDeOscuridad(1)
		mascaraOscura.minimoDePoder(4)
		rolando.agregarArtefacto(mascaraOscura)
		rolando.agregarArtefacto(armaduraSinRefuerzo)
		rolando.agregarArtefacto(espejo)
	}

	test "rolando esta cargado" {
		assert.that(rolando.estaCargado())
	}

	test "rolando esta cargado sin armadura" {
		rolando.eliminarArtefacto(armaduraSinRefuerzo)
		assert.notThat(rolando.estaCargado())
	}

	test "habilidad de lucha de rolando" {
		assert.equals(20, rolando.valorDeLucha())
	}

	test "valor de lucha con hechizo de bendicion" {
		refuerzoHechizo.hechizo(espectroMalefico)
		armaduraSinRefuerzo.refuerzo(refuerzoHechizo)
		assert.equals(19, armaduraSinRefuerzo.unidadesDeLucha(rolando))
	}

	test "sin artefactos" {
		rolando.eliminarTodosLosArtefactos()
		assert.equals(1, rolando.valorDeLucha())
	}

	test "hechiceria logos" {
		const espectroMalefico = new Logos("espectro malefico")
		libroDeHechizos.agregarHechizo(espectroMalefico)
		libroDeHechizos.agregarHechizo(hechizoBasico)
		assert.equals(56, rolando.nivelHechiceria())
	}

	test "armadura extra" {
		cotaDeMalla.calidad(6)
		const armaduraExtra = new Armadura(5, cotaDeMalla)
		rolando.agregarArtefacto(armaduraExtra)
		assert.equals(37, rolando.valorDeLucha())
	}

}

